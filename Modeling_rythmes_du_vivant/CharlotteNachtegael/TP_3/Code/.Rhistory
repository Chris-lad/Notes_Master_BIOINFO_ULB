brux <- function(omega=10){
brux <- function(omega=10){
r
eeee
Ã 
}
rr
brux <- function(omega=10){
### Simulate the stochastic version of the Bruxellator with the Gillespie algorithm
### Didier Gonze - Created: 18/11/2009 - Updated: 15/4/2016
### To allocate enough memory, launch R with the following options:
### R --min-vsize=10M --max-vsize=100M --min-nsize=500k --max-nsize=100M
### Parameter omega is the system size (try omega=10, omega=50, omega=100)
###  Model parameters (concentration)
a=2
b=5.2
x0=1
y0=1
###  Time parameters
tend=100
tech=0.05
###  Initialization
trans=50
###  Initial condition (concentration)
a=a*omega
b=b*omega
x=x0*omega
y=y0*omega
t=0
tout=c()
yout=c()
told=0
w=rep(0,4)
###  Gillepie loop
while(t<trans+tend){
w[1]=a
w[3]=x*(x-1)*y/omega^2
w[4]=x
c[1]=w[1]
c[j]=c[j-1]+w[j]
end
ct=c[4]
t=t+tau
uct=z[2]*ct
if (uct < c[1]){
}
else if (uct <= c[2]){
x=x-1
}
else if (uct <= c[3]){
else if (uct <= c[4]){
x=x-1
}
tout=c(tout,t-trans)
xout=c(xout,x)
yout=c(yout,y)
told=t
}
z=runif(2,min=0,max=1)
x=x+1
for (j in 2:4)
tau=(-log(z[1]))/ct
y=y-1
y=y+1
xout=c()
w[2]=b*x/omega
c=rep(0,4)
if ((t>trans) && (t>told+tech)){
x=x+1
}
}  # end of the while loop
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/brux.r', echo=TRUE)
brux()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/brux.r', echo=TRUE)
brux()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/brux.r', echo=TRUE)
brux()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
tog()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
rep()
remove(rep())
View(rep)
View(tog)
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
represillator()
remove(rep)
represillator()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
represillator()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep_IPTG.R', encoding = 'UTF-8', echo=TRUE)
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep_IPTG.R', encoding = 'UTF-8', echo=TRUE)
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
represillator_IPTG()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep_IPTG.R', encoding = 'UTF-8', echo=TRUE)
represillator_IPTG()
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep_IPTG.R', encoding = 'UTF-8', echo=TRUE)
help(sd)
help(mean)
source('D:/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_toggle()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_toggle(100)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_toggle(100)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_toggle(100)
warnings()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
tog(100)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog(100)
tog(100)
tog(100)
tog(500)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
tog(5)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
help(max)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog(50)
tog(50)
tog(50)
tog(50)
tog(50)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_rep.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/bruit_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_rep(5)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
tog()
for (i:25){}
for (i:25){}
for (i in 1:25){}
for (i in 1:25){tog()}
for (i in 1:25){tog()}
for (i in 1:25){tog()}
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
tog()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/tog.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/rep.R', encoding = 'UTF-8', echo=TRUE)
rep()
represillator()
View(repeat_rep)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
help("rainbow")
rainbow(10)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
synchro_rep()
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/IPTG_synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
View(represillator_IPTG)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/IPTG_synchro_rep.R', encoding = 'UTF-8', echo=TRUE)
repeat_IPTG_rep(5,100,20,20,60)
repeat_IPTG_rep(5,100,10,20,60)
source('C:/Users/Charlotte/Dropbox/Bioinfo/Modeling_rythmes_du_vivant/TP/TP_3/Code/IPTG_synchro_tog.R', encoding = 'UTF-8', echo=TRUE)
repeat_IPTG_tog(5,100,1,20,60)
repeat_IPTG_tog(5,100,2,20,60)
repeat_IPTG_tog(5,100,0.5,20,80)
repeat_IPTG_tog(5,100,0.5,20,100)
repeat_IPTG_tog(5,100,0.8,10,80)
repeat_IPTG_tog(5,100,0.8,10,80)
